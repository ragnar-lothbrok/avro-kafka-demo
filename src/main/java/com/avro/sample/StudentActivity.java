/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.avro.sample;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class StudentActivity extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"StudentActivity\",\"namespace\":\"com.avro.sample\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"student_id\",\"type\":\"int\"},{\"name\":\"university_id\",\"type\":\"int\"},{\"name\":\"course_details\",\"type\":{\"type\":\"record\",\"name\":\"Activity\",\"fields\":[{\"name\":\"course_id\",\"type\":\"int\"},{\"name\":\"enroll_date\",\"type\":\"string\"},{\"name\":\"verb\",\"type\":\"string\"},{\"name\":\"result_score\",\"type\":\"double\"}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence id;
  @Deprecated public int student_id;
  @Deprecated public int university_id;
  @Deprecated public com.avro.sample.Activity course_details;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public StudentActivity() {}

  /**
   * All-args constructor.
   */
  public StudentActivity(java.lang.CharSequence id, java.lang.Integer student_id, java.lang.Integer university_id, com.avro.sample.Activity course_details) {
    this.id = id;
    this.student_id = student_id;
    this.university_id = university_id;
    this.course_details = course_details;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return student_id;
    case 2: return university_id;
    case 3: return course_details;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: student_id = (java.lang.Integer)value$; break;
    case 2: university_id = (java.lang.Integer)value$; break;
    case 3: course_details = (com.avro.sample.Activity)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'student_id' field.
   */
  public java.lang.Integer getStudentId() {
    return student_id;
  }

  /**
   * Sets the value of the 'student_id' field.
   * @param value the value to set.
   */
  public void setStudentId(java.lang.Integer value) {
    this.student_id = value;
  }

  /**
   * Gets the value of the 'university_id' field.
   */
  public java.lang.Integer getUniversityId() {
    return university_id;
  }

  /**
   * Sets the value of the 'university_id' field.
   * @param value the value to set.
   */
  public void setUniversityId(java.lang.Integer value) {
    this.university_id = value;
  }

  /**
   * Gets the value of the 'course_details' field.
   */
  public com.avro.sample.Activity getCourseDetails() {
    return course_details;
  }

  /**
   * Sets the value of the 'course_details' field.
   * @param value the value to set.
   */
  public void setCourseDetails(com.avro.sample.Activity value) {
    this.course_details = value;
  }

  /** Creates a new StudentActivity RecordBuilder */
  public static com.avro.sample.StudentActivity.Builder newBuilder() {
    return new com.avro.sample.StudentActivity.Builder();
  }
  
  /** Creates a new StudentActivity RecordBuilder by copying an existing Builder */
  public static com.avro.sample.StudentActivity.Builder newBuilder(com.avro.sample.StudentActivity.Builder other) {
    return new com.avro.sample.StudentActivity.Builder(other);
  }
  
  /** Creates a new StudentActivity RecordBuilder by copying an existing StudentActivity instance */
  public static com.avro.sample.StudentActivity.Builder newBuilder(com.avro.sample.StudentActivity other) {
    return new com.avro.sample.StudentActivity.Builder(other);
  }
  
  /**
   * RecordBuilder for StudentActivity instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<StudentActivity>
    implements org.apache.avro.data.RecordBuilder<StudentActivity> {

    private java.lang.CharSequence id;
    private int student_id;
    private int university_id;
    private com.avro.sample.Activity course_details;

    /** Creates a new Builder */
    private Builder() {
      super(com.avro.sample.StudentActivity.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.avro.sample.StudentActivity.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.student_id)) {
        this.student_id = data().deepCopy(fields()[1].schema(), other.student_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.university_id)) {
        this.university_id = data().deepCopy(fields()[2].schema(), other.university_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.course_details)) {
        this.course_details = data().deepCopy(fields()[3].schema(), other.course_details);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing StudentActivity instance */
    private Builder(com.avro.sample.StudentActivity other) {
            super(com.avro.sample.StudentActivity.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.student_id)) {
        this.student_id = data().deepCopy(fields()[1].schema(), other.student_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.university_id)) {
        this.university_id = data().deepCopy(fields()[2].schema(), other.university_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.course_details)) {
        this.course_details = data().deepCopy(fields()[3].schema(), other.course_details);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.CharSequence getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public com.avro.sample.StudentActivity.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public com.avro.sample.StudentActivity.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'student_id' field */
    public java.lang.Integer getStudentId() {
      return student_id;
    }
    
    /** Sets the value of the 'student_id' field */
    public com.avro.sample.StudentActivity.Builder setStudentId(int value) {
      validate(fields()[1], value);
      this.student_id = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'student_id' field has been set */
    public boolean hasStudentId() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'student_id' field */
    public com.avro.sample.StudentActivity.Builder clearStudentId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'university_id' field */
    public java.lang.Integer getUniversityId() {
      return university_id;
    }
    
    /** Sets the value of the 'university_id' field */
    public com.avro.sample.StudentActivity.Builder setUniversityId(int value) {
      validate(fields()[2], value);
      this.university_id = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'university_id' field has been set */
    public boolean hasUniversityId() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'university_id' field */
    public com.avro.sample.StudentActivity.Builder clearUniversityId() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'course_details' field */
    public com.avro.sample.Activity getCourseDetails() {
      return course_details;
    }
    
    /** Sets the value of the 'course_details' field */
    public com.avro.sample.StudentActivity.Builder setCourseDetails(com.avro.sample.Activity value) {
      validate(fields()[3], value);
      this.course_details = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'course_details' field has been set */
    public boolean hasCourseDetails() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'course_details' field */
    public com.avro.sample.StudentActivity.Builder clearCourseDetails() {
      course_details = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    public StudentActivity build() {
      try {
        StudentActivity record = new StudentActivity();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.student_id = fieldSetFlags()[1] ? this.student_id : (java.lang.Integer) defaultValue(fields()[1]);
        record.university_id = fieldSetFlags()[2] ? this.university_id : (java.lang.Integer) defaultValue(fields()[2]);
        record.course_details = fieldSetFlags()[3] ? this.course_details : (com.avro.sample.Activity) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}

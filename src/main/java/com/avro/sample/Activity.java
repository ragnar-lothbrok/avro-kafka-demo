/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.avro.sample;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Activity extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Activity\",\"namespace\":\"com.avro.sample\",\"fields\":[{\"name\":\"course_id\",\"type\":\"int\"},{\"name\":\"enroll_date\",\"type\":\"string\"},{\"name\":\"verb\",\"type\":\"string\"},{\"name\":\"result_score\",\"type\":\"double\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public int course_id;
  @Deprecated public java.lang.CharSequence enroll_date;
  @Deprecated public java.lang.CharSequence verb;
  @Deprecated public double result_score;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Activity() {}

  /**
   * All-args constructor.
   */
  public Activity(java.lang.Integer course_id, java.lang.CharSequence enroll_date, java.lang.CharSequence verb, java.lang.Double result_score) {
    this.course_id = course_id;
    this.enroll_date = enroll_date;
    this.verb = verb;
    this.result_score = result_score;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return course_id;
    case 1: return enroll_date;
    case 2: return verb;
    case 3: return result_score;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: course_id = (java.lang.Integer)value$; break;
    case 1: enroll_date = (java.lang.CharSequence)value$; break;
    case 2: verb = (java.lang.CharSequence)value$; break;
    case 3: result_score = (java.lang.Double)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'course_id' field.
   */
  public java.lang.Integer getCourseId() {
    return course_id;
  }

  /**
   * Sets the value of the 'course_id' field.
   * @param value the value to set.
   */
  public void setCourseId(java.lang.Integer value) {
    this.course_id = value;
  }

  /**
   * Gets the value of the 'enroll_date' field.
   */
  public java.lang.CharSequence getEnrollDate() {
    return enroll_date;
  }

  /**
   * Sets the value of the 'enroll_date' field.
   * @param value the value to set.
   */
  public void setEnrollDate(java.lang.CharSequence value) {
    this.enroll_date = value;
  }

  /**
   * Gets the value of the 'verb' field.
   */
  public java.lang.CharSequence getVerb() {
    return verb;
  }

  /**
   * Sets the value of the 'verb' field.
   * @param value the value to set.
   */
  public void setVerb(java.lang.CharSequence value) {
    this.verb = value;
  }

  /**
   * Gets the value of the 'result_score' field.
   */
  public java.lang.Double getResultScore() {
    return result_score;
  }

  /**
   * Sets the value of the 'result_score' field.
   * @param value the value to set.
   */
  public void setResultScore(java.lang.Double value) {
    this.result_score = value;
  }

  /** Creates a new Activity RecordBuilder */
  public static com.avro.sample.Activity.Builder newBuilder() {
    return new com.avro.sample.Activity.Builder();
  }
  
  /** Creates a new Activity RecordBuilder by copying an existing Builder */
  public static com.avro.sample.Activity.Builder newBuilder(com.avro.sample.Activity.Builder other) {
    return new com.avro.sample.Activity.Builder(other);
  }
  
  /** Creates a new Activity RecordBuilder by copying an existing Activity instance */
  public static com.avro.sample.Activity.Builder newBuilder(com.avro.sample.Activity other) {
    return new com.avro.sample.Activity.Builder(other);
  }
  
  /**
   * RecordBuilder for Activity instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Activity>
    implements org.apache.avro.data.RecordBuilder<Activity> {

    private int course_id;
    private java.lang.CharSequence enroll_date;
    private java.lang.CharSequence verb;
    private double result_score;

    /** Creates a new Builder */
    private Builder() {
      super(com.avro.sample.Activity.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.avro.sample.Activity.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.course_id)) {
        this.course_id = data().deepCopy(fields()[0].schema(), other.course_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.enroll_date)) {
        this.enroll_date = data().deepCopy(fields()[1].schema(), other.enroll_date);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.verb)) {
        this.verb = data().deepCopy(fields()[2].schema(), other.verb);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.result_score)) {
        this.result_score = data().deepCopy(fields()[3].schema(), other.result_score);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Activity instance */
    private Builder(com.avro.sample.Activity other) {
            super(com.avro.sample.Activity.SCHEMA$);
      if (isValidValue(fields()[0], other.course_id)) {
        this.course_id = data().deepCopy(fields()[0].schema(), other.course_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.enroll_date)) {
        this.enroll_date = data().deepCopy(fields()[1].schema(), other.enroll_date);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.verb)) {
        this.verb = data().deepCopy(fields()[2].schema(), other.verb);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.result_score)) {
        this.result_score = data().deepCopy(fields()[3].schema(), other.result_score);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'course_id' field */
    public java.lang.Integer getCourseId() {
      return course_id;
    }
    
    /** Sets the value of the 'course_id' field */
    public com.avro.sample.Activity.Builder setCourseId(int value) {
      validate(fields()[0], value);
      this.course_id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'course_id' field has been set */
    public boolean hasCourseId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'course_id' field */
    public com.avro.sample.Activity.Builder clearCourseId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'enroll_date' field */
    public java.lang.CharSequence getEnrollDate() {
      return enroll_date;
    }
    
    /** Sets the value of the 'enroll_date' field */
    public com.avro.sample.Activity.Builder setEnrollDate(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.enroll_date = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'enroll_date' field has been set */
    public boolean hasEnrollDate() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'enroll_date' field */
    public com.avro.sample.Activity.Builder clearEnrollDate() {
      enroll_date = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'verb' field */
    public java.lang.CharSequence getVerb() {
      return verb;
    }
    
    /** Sets the value of the 'verb' field */
    public com.avro.sample.Activity.Builder setVerb(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.verb = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'verb' field has been set */
    public boolean hasVerb() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'verb' field */
    public com.avro.sample.Activity.Builder clearVerb() {
      verb = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'result_score' field */
    public java.lang.Double getResultScore() {
      return result_score;
    }
    
    /** Sets the value of the 'result_score' field */
    public com.avro.sample.Activity.Builder setResultScore(double value) {
      validate(fields()[3], value);
      this.result_score = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'result_score' field has been set */
    public boolean hasResultScore() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'result_score' field */
    public com.avro.sample.Activity.Builder clearResultScore() {
      fieldSetFlags()[3] = false;
      return this;
    }

    public Activity build() {
      try {
        Activity record = new Activity();
        record.course_id = fieldSetFlags()[0] ? this.course_id : (java.lang.Integer) defaultValue(fields()[0]);
        record.enroll_date = fieldSetFlags()[1] ? this.enroll_date : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.verb = fieldSetFlags()[2] ? this.verb : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.result_score = fieldSetFlags()[3] ? this.result_score : (java.lang.Double) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
